library(ISLR)
attach(Smarket)
names(Smarket)
head(Smarket,1)
dim(Smarket)
summary(Smarket)
pairs(Smarket)
plot(Volume)
cor(Smarket[,-9]) # loai cot k phai numberic la direction
#gan Down la 0 , Up la 1
# P(Y=1|X)=P(Direction = Up|X)=1 / (1 + e^-(-0.126 - 0.073 * Lag1 - 0.042 * Lag2 + 0.011 * Lag3 + 0.008 * Lag4 + 0.01 * lag5 + 0.135 * volume))
glm=glm(Direction ~ Lag1 +Lag2+ Lag3+ Lag4+ Lag5+ Volume,data = Smarket,family = binomial)
glm
Direction
summary(glm)
summary(glm)$coef
summary(glm)$coef[,1]
#predict output P(Y=1|X)
glm.probs = predict(glm,type = "response")
contrasts(Direction)
# dua ra du doan ve xac suat P(Y=1|X)=P(Direction = Up | X)
glm.probs[1:10]
Smarket[1,2:7]
glm.pred=rep("Down",1250)
glm.pred[glm.probs > .5] = "Up"
glm.pred
table(glm.pred,Direction)
145+457+141+507
#Direction la xu huong thuc te, glm.pred la xu huong du doan
# de bt hieu suat cua mo hinh ta tinh do chinh xac khi du doan
#(145 + 507)/1250 do chinh xac
(145 + 507)/1250
mean(glm.pred == Direction)
data = read.csv("D:\\PTHQ\\b7\\Australian Institute of Sport.csv")
sum(is.na(data))
set.seed(1)
data$Sex = factor(data$Sex)
sample=sample(c(TRUE,FALSE),202,replace = TRUE,prob = c(0.7,0.3))
sample
head(data)
summary(ul)
ul = glm(Sex ~ RCC + Ferr + BMI + SSF,data=train,family = binomial)
summary(ul)
ul = glm(Sex ~ RCC + Ferr + BMI + SSF,data=train,family = binomial)
data$Sex = factor(data$Sex)
sample=sample(c(TRUE,FALSE),202,replace = TRUE,prob = c(0.7,0.3))
train=data[sample,]
test=data[!sample,]
ul = glm(Sex ~ RCC + Ferr + BMI + SSF,data=train,family = binomial)
summary(ul)
set.seed(1)
data$Sex = factor(data$Sex)
sample=sample(c(TRUE,FALSE),202,replace = TRUE,prob = c(0.7,0.3))
train=data[sample,]
test=data[!sample,]
ul = glm(Sex ~ RCC + Ferr + BMI + SSF,data=train,family = binomial)
summary(ul)
# Sex = 1 / (1 + exp(31.86789- 3.66463-0.03175-0.94652+0.14127))
# p_value < 0.05 nen cac bien deu co y nghia
# ko can cai tien mo hinh
contrasts(data$Sex)
glm.probs=predict(ul,test,type="response")
nrow(test)
glm.pred=rep("female",nrow(test))
glm.pred[glm.probs > 0.5]="male"
table(glm.pred,test$Sex)
predict(ul,data.frame(RCC=4.2,Ferr = 68, BMI = 24,SSF=114),type = "response")
1/(1+exp(7.706157))
# Sex = 1 / (1 + exp(31.86789- 3.66463-0.03175-0.94652+0.14127))
# p_value < 0.05 nen cac bien deu co y nghia
# ko can cai tien mo hinh
contrasts(data$Sex)
#phan tich tp chnh
#sd ma tran hiep phuong sai khi cac bien cung thang do do
#sd ma tran tuong quan khi cac bien dc do o cac thang do khac nhau
# data 1 khuyen nghi pbo dau tu
invest = read.table("D:\\PTHQ\\b8\\investment.txt",header = T)
View(invest)
head(invest,2)
rownames(invest)=invest$Manager
#doi ten cac hanh thanh ten manager tuong ung
invest = invest[,-1]
head(invest,1)
library(tree)
library(ISLR)
attach(Carseats)
names(Carseats)
#High = as.factor(ifelse(Sales <=8,"No","Yes"))  # tao bien High la bien phan loai dua tren gtri sales
#Carseats=data.frame(Carseats,High) # ghep noi bo dl ban dau voi bien High vua tao
tree.carsrats = tree(High ~.-Sales,Carseats)   # cu phap tree giong voi lm(glm): du doan High theo tat ca cac bien tru Sales
summary(tree.carsrats)
#High = as.factor(ifelse(Sales <=8,"No","Yes"))  # tao bien High la bien phan loai dua tren gtri sales
#Carseats=data.frame(Carseats,High) # ghep noi bo dl ban dau voi bien High vua tao
tree.carsrats = tree(High ~.-Sales,Carseats)   # cu phap tree giong voi lm(glm): du doan High theo tat ca cac bien tru Sales
High = as.factor(ifelse(Sales <=8,"No","Yes"))  # tao bien High la bien phan loai dua tren gtri sales
#High = as.factor(ifelse(Sales <=8,"No","Yes"))  # tao bien High la bien phan loai dua tren gtri sales
#Carseats=data.frame(Carseats,High) # ghep noi bo dl ban dau voi bien High vua tao
tree.carsrats = tree(High ~.-Sales,Carseats)   # cu phap tree giong voi lm(glm): du doan High theo tat ca cac bien tru Sales
summary(tree.carsrats)
# Vẽ biểu đồ
plot(tree.carsrats)
plot(tree.carsrats)
# Thêm các nhãn cho cây
text(tree.carsrats, pretty = 0, cex = 0.4)
levels(Carseats$ShelveLoc)
plot(tree.carsrats)
# Thêm các nhãn cho cây
text(tree.carsrats, pretty = 0, cex = 0.4)
levels(Carseats$ShelveLoc)
set.seed(2)
train=sample(1:nrow(Carseats),200)
Carseats.test=Carseats[-train,]
High.test=High[-train]
tree.carsrats=tree(High~.-Sales,Carseats,subset = train)
tree.pred=predict(tree.carsrats,Carseats.test,type="class")
table(tree.pred,High.test)
#Xem set dp chinh xac khi ap dung vao tap test
(104+50)/200 # do chinh xac
cv.careats = cv.tree(tree.carsrats,FUN=prune.misclass)
names(cv.careats)
plot(tree.boston)
par(mfrow=c(1,2))
plot(cv.careats$size,cv.careats$dev,type = "b")
plot(cv.careats$k,cv.careats$dev,type = "b")
plot(cv.careats$size,cv.careats$dev,type = "o")
plot(cv.careats$k,cv.careats$dev,type = "b")
dev.off()
prune.carseats=prune.misclass(tree.carsrats,best=5)
plot(cv.careats$size,cv.careats$dev,type="b")
prune.carseats=prune.misclass(tree.carsrats,best=9)
plot(prune.carseats)
plot(prune.carseats)
text(prune.carseats,pretty=0,cex=0.5)
table(tree.pred,High.test)
tree.pred=predict(tree.carsrats,Carseats.test,type="class")
table(tree.pred,High.test)
set.seed(2)
train=sample(1:nrow(Carseats),200)
Carseats.test=Carseats[-train,]
High.test=High[-train]
tree.carsrats=tree(High~.-Sales,Carseats,subset = train)
tree.pred=predict(tree.carsrats,Carseats.test,type="class")
table(tree.pred,High.test)
cv.careats = cv.tree(tree.carsrats,FUN=prune.misclass)
names(cv.careats)
cv.careats # dev cac nho thi lua chon tot
cv.careats = cv.tree(tree.carsrats,FUN=prune.misclass)
names(cv.careats)
cv.careats # dev cac nho thi lua chon tot
par(mfrow=c(1,2))
plot(cv.careats$size,cv.careats$dev,type = "b")
plot(cv.careats$k,cv.careats$dev,type = "b")
prune.carseats=prune.misclass(tree.carsrats,best=5)
plot(cv.careats$size,cv.careats$dev,type="b")
prune.carseats=prune.misclass(tree.carsrats,best=9)
plot(prune.carseats)
text(prune.carseats,pretty=0,cex=0.5)
table(tree.pred,High.test)
set.seed(1)
train = sample(1:nrow(Boston),nrow(Boston)/2)
prune.carseats=prune.misclass(tree.carsrats,best=15)
plot(prune.carseats)
text(prune.carseats,cex=0.5,pretty = 0)
set.seed(1)
train = sample(1:nrow(Boston),nrow(Boston)/2)
#phan tich tp chnh
#sd ma tran hiep phuong sai khi cac bien cung thang do do
#sd ma tran tuong quan khi cac bien dc do o cac thang do khac nhau
# data 1 khuyen nghi pbo dau tu
invest = read.table("D:\\PTHQ\\b8\\investment.txt",header = T)
head(invest,2)
rownames(invest)=invest$Manager
#doi ten cac hanh thanh ten manager tuong ung
invest = invest[,-1]
head(invest,1)
#Xet tren tap du lieu
pc=princomp(invest) # phan tich thanh phan chinh tren chinh du lieu(gan xap xi pttpc tren ma tran hiep phuong sai)/phan tich tp chinh tren mtran tuong quan
s=summary(pc)
s
View(invest)
#xet tren ma tran hiep phuong sai cua tap du lieu
pcacov=princomp(covmat = cov(invest))
# standar deviation la sqrt(D(Y_i)) = sqrt(lambda_i) voi lambda_i la gtri rieng thu i cua mtran hiep phuong sai
summary(pcacov)
eigen(cov(invest))$values
sqrt(eigen(cov(invest))$values)
pcacov$loading # factor loadings : ma tran tai trong Y_i = e_i + X
eigen(cov(invest))$vectors[,-1] # vecto rieng thu nhat cua mtran hiep phuong sai
summary(pcacov,loadings = T)
screeplot(pc,col = " red",pch = 16, type = "lines", cex = 2, lwd = 2, main = "")
pc = princomp(invest)
biplot(pc , col = c(2,4), cex = c(.5,1.25),xlim = c(-.45, .45), xlab ="First principal component", ylab ="Second principal component",main="Biplot for invesment allocations")
invest["BankofAmerica",]
invest["FifthThirdBank",]
invest["HighmountCapital",]
# Tạo dữ liệu giả
set.seed(123)
X1 = rnorm(100)
X2 = 2 * X1 + rnorm(100)
# Gộp dữ liệu thành ma trận
data = data.frame(X1, X2)
# Thực hiện PCA
pca_result = prcomp(data, scale. = TRUE)
# Hiển thị kết quả
summary(pca_result)
pca_result$rotation
library(datasets)
data("USJudgeRatings")
data
pairs(USJudgeRatings)
# Thực hiện PCA
pca_result <- prcomp(USJudgeRatings, scale. = TRUE)
# Tóm tắt PCA
summary(pca_result)
table(tree.pred,High.test)
tree.pred=predict(tree.carsrats,Carseats.test,type="class")
tree.carsrats=tree(High~.-Sales,Carseats,subset = train)
library(tree)
library(ISLR)
attach(Carseats)
names(Carseats)
High = as.factor(ifelse(Sales <=8,"No","Yes"))  # tao bien High la bien phan loai dua tren gtri sales
#Carseats=data.frame(Carseats,High) # ghep noi bo dl ban dau voi bien High vua tao
tree.carsrats = tree(High ~.-Sales,Carseats)   # cu phap tree giong voi lm(glm): du doan High theo tat ca cac bien tru Sales
summary(tree.carsrats)
levels(Carseats$ShelveLoc)
set.seed(2)
train=sample(1:nrow(Carseats),200)
Carseats.test=Carseats[-train,]
High.test=High[-train]
tree.carsrats=tree(High~.-Sales,Carseats,subset = train)
tree.pred=predict(tree.carsrats,Carseats.test,type="class")
table(tree.pred,High.test)
cv.careats = cv.tree(tree.carsrats,FUN=prune.misclass)
names(cv.careats)
cv.careats # dev cac nho thi lua chon tot
table(tree.pred,High.test)
set.seed(1)
train = sample(1:nrow(Boston),nrow(Boston)/2)
